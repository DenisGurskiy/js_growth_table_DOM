{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAQ,EAAU,aAAa,CAAC,SAEtC,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAY,EAAU,aAAa,CAAC,eACpC,EAAY,EAAU,aAAa,CAAC,eACpC,EAAe,EAAU,aAAa,CAAC,kBACvC,EAAe,EAAU,aAAa,CAAC,kBAEvC,EAAQ,EAAG,EAAU,gBAAgB,CAAC,OACtC,EAAM,EAAU,aAAa,CAAC,MAE9B,EAAW,WACf,IAAM,EAAW,EAAG,EAAU,gBAAgB,CAAC,MAE/C,CAAA,EAAU,QAAQ,CAAG,EAAQ,MAAM,EAAI,EACvC,EAAU,QAAQ,CAAG,EAAQ,MAAM,EAAI,EACzC,EAEM,EAAW,WACf,IAAM,EAAU,EAAU,aAAa,CAAC,MAAM,QAAQ,AAEtD,CAAA,EAAa,QAAQ,CAAG,EAAQ,MAAM,EAAI,EAC1C,EAAa,QAAQ,CAAG,EAAQ,MAAM,EAAI,EAC5C,EAEA,GAAI,EAAE,MAAM,GAAK,GACX,EAAK,MAAM,CAAG,GAAI,CACpB,IAAM,EAAS,EAAI,SAAS,CAAC,CAAA,GAE7B,EAAM,MAAM,CAAC,GACb,GACF,CAGE,EAAE,MAAM,GAAK,IAGf,AAFgB,EAAM,aAAa,CAAC,iBAE5B,MAAM,GACd,KAGE,EAAE,MAAM,GAAK,GACX,EAAI,QAAQ,CAAC,MAAM,CAAG,KACxB,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,MAEtC,EAAI,WAAW,CAAC,EAClB,GAEA,KAIA,EAAE,MAAM,GAAK,IACf,EAAK,OAAO,CAAC,SAAC,CAAd,EAGE,AAFgB,EAAI,aAAa,CAAC,iBAE1B,MAAM,EAChB,GAEA,IAEJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-shadow */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar container = document.querySelector(\".container\");\nvar table = container.querySelector(\"tbody\");\ncontainer.addEventListener(\"click\", function(e) {\n    var appendRow = container.querySelector(\".append-row\");\n    var removeRow = container.querySelector(\".remove-row\");\n    var appendColumn = container.querySelector(\".append-column\");\n    var removeColumn = container.querySelector(\".remove-column\");\n    var rows = _to_consumable_array(container.querySelectorAll(\"tr\"));\n    var row = container.querySelector(\"tr\");\n    var checkRow = function() {\n        var allRows = _to_consumable_array(container.querySelectorAll(\"tr\"));\n        removeRow.disabled = allRows.length <= 2;\n        appendRow.disabled = allRows.length >= 10;\n    };\n    var checkCol = function() {\n        var allCols = container.querySelector(\"tr\").children;\n        removeColumn.disabled = allCols.length <= 2;\n        appendColumn.disabled = allCols.length >= 10;\n    };\n    if (e.target === appendRow) {\n        if (rows.length < 10) {\n            var newRow = row.cloneNode(true);\n            table.append(newRow);\n            checkRow();\n        }\n    }\n    if (e.target === removeRow) {\n        var lastRow = table.querySelector(\"tr:last-child\");\n        lastRow.remove();\n        checkRow();\n    }\n    if (e.target === appendColumn) {\n        if (row.children.length < 10) {\n            rows.forEach(function(row) {\n                var newCol = document.createElement(\"td\");\n                row.appendChild(newCol);\n            });\n            checkCol();\n        }\n    }\n    if (e.target === removeColumn) {\n        rows.forEach(function(row) {\n            var lastCol = row.querySelector(\"td:last-child\");\n            lastCol.remove();\n        });\n        checkCol();\n    }\n});\n\n//# sourceMappingURL=index.dde62e4a.js.map\n","/* eslint-disable no-shadow */\n'use strict';\n\nconst container = document.querySelector('.container');\nconst table = container.querySelector('tbody');\n\ncontainer.addEventListener('click', (e) => {\n  const appendRow = container.querySelector('.append-row');\n  const removeRow = container.querySelector('.remove-row');\n  const appendColumn = container.querySelector('.append-column');\n  const removeColumn = container.querySelector('.remove-column');\n\n  const rows = [...container.querySelectorAll('tr')];\n  const row = container.querySelector('tr');\n\n  const checkRow = () => {\n    const allRows = [...container.querySelectorAll('tr')];\n\n    removeRow.disabled = allRows.length <= 2;\n    appendRow.disabled = allRows.length >= 10;\n  };\n\n  const checkCol = () => {\n    const allCols = container.querySelector('tr').children;\n\n    removeColumn.disabled = allCols.length <= 2;\n    appendColumn.disabled = allCols.length >= 10;\n  };\n\n  if (e.target === appendRow) {\n    if (rows.length < 10) {\n      const newRow = row.cloneNode(true);\n\n      table.append(newRow);\n      checkRow();\n    }\n  }\n\n  if (e.target === removeRow) {\n    const lastRow = table.querySelector('tr:last-child');\n\n    lastRow.remove();\n    checkRow();\n  }\n\n  if (e.target === appendColumn) {\n    if (row.children.length < 10) {\n      rows.forEach((row) => {\n        const newCol = document.createElement('td');\n\n        row.appendChild(newCol);\n      });\n\n      checkCol();\n    }\n  }\n\n  if (e.target === removeColumn) {\n    rows.forEach((row) => {\n      const lastCol = row.querySelector('td:last-child');\n\n      lastCol.remove();\n    });\n\n    checkCol();\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","container","document","querySelector","table","addEventListener","e","appendRow","removeRow","appendColumn","removeColumn","rows","querySelectorAll","row","checkRow","allRows","disabled","checkCol","allCols","children","target","newRow","cloneNode","append","lastRow","remove","forEach","newCol","createElement","appendChild","lastCol"],"version":3,"file":"index.dde62e4a.js.map"}